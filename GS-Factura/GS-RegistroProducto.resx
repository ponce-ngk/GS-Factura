<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>69</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="errorProvider1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAACqAAAA/1WIqv+AzP//K0RV/wAAAP9ViKr/gMz//ytEVf8AAAD/VYiq/4DM//8rRFX/AAAA/1WI
        qv+AzP//K0RV/wAAAP8AAABVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAKoAAAD/VYiq/4DM//8rRFX/AAAA/1WIqv+AzP//K0RV/wAAAP9ViKr/gMz//ytE
        Vf8AAAD/VYiq/4DM//8rRFX/AAAA/wAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAqgAAAP9ViKr/gMz//ytEVf8AAAD/VYiq/4DM//8rRFX/AAAA/1WI
        qv+AzP//K0RV/wAAAP9ViKr/gMz//ytEVf8AAAD/AAAAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqAAAA/1WIqv+AzP//K0RV/wAAAP9ViKr/gMz//ytE
        Vf8AAAD/VYiq/4DM//8oQFD/AAAA/1WHqf+AzP//K0RV/wAAAP8AAABVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKoAAAD/VYiq/4DM//8rRFX/AAAA/1WI
        qv+AzP//K0RV/wAAAP9ViKr/gMz//xEbIv8AAAD/PWJ7/4DM//8pQlL/AAAA/wAAAFIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqgAAAP9ViKr/gMz//ytE
        Vf8AAAD/VYiq/4DM//8rRFX/AAAA/1WIqv+AzP//FiIr/wAAAP8VISn/THmX/wgMD/4AAAD/AAAAJwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqAAAA/1WI
        qv+AzP//K0RV/wAAAP9ViKr/gMz//ytEVf8AAAD/VYiq/4DM//8nP07/AAAA/wAAAP8AAAD/AAAA/wAA
        AJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AKoAAAD/VYiq/4DM//8oQFD/AAAA/1WHqf+AzP//KEBQ/wAAAP9Vh6n/gMz//ytEVf8AAAD/AAAAqgAA
        AJwAAABfAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAqAAAAP9Uhqj/gMz//xAaIP8AAAD/QGZ//4DM//8RGyL/AAAA/z1ie/+AzP//KUJS/wAA
        AP8AAABSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB+AAAA/x8xPf9Mepj/AwQF/wAAAP9Ic4//gMz//xYiK/8AAAD/FSEp/0x6
        mP8IDBD/AAAA/wAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAADjAAAA/wAAAP8AAAD/AAAA/zpcc/92vez/Ex4m/wAA
        AP8AAAD/AAAA/wAAAP8AAAChAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAB/AAAAnAAAAIIAAAD8AAAA/wAA
        AP8AAAD/AAAA2QAAAIIAAACcAAAAYAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AE8AAADTAAAA8QAAALQAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/5gAAP8AAAD+AAAA/AAAAPgAAAD4AAAB8AAAAfAAAAPgAAAH4AAAB+AA
        AA/AAAAfgAAAHwAAAD8AAAA/AAAAfwAAAH8AAAB//gAAP/4AAD/+AAA//gAAP/4AAD/+AAA//gAAP/4A
        AH/+AAB//gAD//4AA//+AAf//wAH///wf/8=
</value>
  </data>
</root>